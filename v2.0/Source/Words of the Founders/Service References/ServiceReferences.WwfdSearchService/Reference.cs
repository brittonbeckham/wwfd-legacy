//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34003
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 11.0.50727.1
// 
namespace Wwfd.WordsOfTheFounders.ServiceReferences.WwfdSearchService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Quote", Namespace="http://schemas.datacontract.org/2004/07/Wwfd.Core.DataObjects")]
    public partial class Quote : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int FounderIdField;
        
        private System.Uri FounderImageThumbnailField;
        
        private string FounderNameField;
        
        private string KeywordsField;
        
        private int QuoteIdField;
        
        private string QuoteTextField;
        
        private string ReferenceInfoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FounderId {
            get {
                return this.FounderIdField;
            }
            set {
                if ((this.FounderIdField.Equals(value) != true)) {
                    this.FounderIdField = value;
                    this.RaisePropertyChanged("FounderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Uri FounderImageThumbnail {
            get {
                return this.FounderImageThumbnailField;
            }
            set {
                if ((object.ReferenceEquals(this.FounderImageThumbnailField, value) != true)) {
                    this.FounderImageThumbnailField = value;
                    this.RaisePropertyChanged("FounderImageThumbnail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FounderName {
            get {
                return this.FounderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FounderNameField, value) != true)) {
                    this.FounderNameField = value;
                    this.RaisePropertyChanged("FounderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keywords {
            get {
                return this.KeywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordsField, value) != true)) {
                    this.KeywordsField = value;
                    this.RaisePropertyChanged("Keywords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuoteId {
            get {
                return this.QuoteIdField;
            }
            set {
                if ((this.QuoteIdField.Equals(value) != true)) {
                    this.QuoteIdField = value;
                    this.RaisePropertyChanged("QuoteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuoteText {
            get {
                return this.QuoteTextField;
            }
            set {
                if ((object.ReferenceEquals(this.QuoteTextField, value) != true)) {
                    this.QuoteTextField = value;
                    this.RaisePropertyChanged("QuoteText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceInfo {
            get {
                return this.ReferenceInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceInfoField, value) != true)) {
                    this.ReferenceInfoField = value;
                    this.RaisePropertyChanged("ReferenceInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Founder", Namespace="http://schemas.datacontract.org/2004/07/Wwfd.Core.DataObjects")]
    public partial class Founder : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DateBornField;
        
        private System.DateTime DateDiedField;
        
        private string FirstNameField;
        
        private string GenderField;
        
        private string LastNameField;
        
        private string MiddleNameField;
        
        private string SuffixField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateBorn {
            get {
                return this.DateBornField;
            }
            set {
                if ((this.DateBornField.Equals(value) != true)) {
                    this.DateBornField = value;
                    this.RaisePropertyChanged("DateBorn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateDied {
            get {
                return this.DateDiedField;
            }
            set {
                if ((this.DateDiedField.Equals(value) != true)) {
                    this.DateDiedField = value;
                    this.RaisePropertyChanged("DateDied");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MiddleName {
            get {
                return this.MiddleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MiddleNameField, value) != true)) {
                    this.MiddleNameField = value;
                    this.RaisePropertyChanged("MiddleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suffix {
            get {
                return this.SuffixField;
            }
            set {
                if ((object.ReferenceEquals(this.SuffixField, value) != true)) {
                    this.SuffixField = value;
                    this.RaisePropertyChanged("Suffix");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferences.WwfdSearchService.IWwfdSearchService")]
    public interface IWwfdSearchService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWwfdSearchService/SearchQuotes", ReplyAction="http://tempuri.org/IWwfdSearchService/SearchQuotesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Wwfd.WordsOfTheFounders.ServiceReferences.WwfdSearchService.Quote>> SearchQuotesAsync(string searchText);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWwfdSearchService/SearchFounders", ReplyAction="http://tempuri.org/IWwfdSearchService/SearchFoundersResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Wwfd.WordsOfTheFounders.ServiceReferences.WwfdSearchService.Founder>> SearchFoundersAsync(string founderName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWwfdSearchService/GetFounders", ReplyAction="http://tempuri.org/IWwfdSearchService/GetFoundersResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Wwfd.WordsOfTheFounders.ServiceReferences.WwfdSearchService.Founder>> GetFoundersAsync(string founderName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWwfdSearchServiceChannel : Wwfd.WordsOfTheFounders.ServiceReferences.WwfdSearchService.IWwfdSearchService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WwfdSearchServiceClient : System.ServiceModel.ClientBase<Wwfd.WordsOfTheFounders.ServiceReferences.WwfdSearchService.IWwfdSearchService>, Wwfd.WordsOfTheFounders.ServiceReferences.WwfdSearchService.IWwfdSearchService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public WwfdSearchServiceClient() : 
                base(WwfdSearchServiceClient.GetDefaultBinding(), WwfdSearchServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IWwfdSearchService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WwfdSearchServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(WwfdSearchServiceClient.GetBindingForEndpoint(endpointConfiguration), WwfdSearchServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WwfdSearchServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(WwfdSearchServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WwfdSearchServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(WwfdSearchServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public WwfdSearchServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Wwfd.WordsOfTheFounders.ServiceReferences.WwfdSearchService.Quote>> SearchQuotesAsync(string searchText) {
            return base.Channel.SearchQuotesAsync(searchText);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Wwfd.WordsOfTheFounders.ServiceReferences.WwfdSearchService.Founder>> SearchFoundersAsync(string founderName) {
            return base.Channel.SearchFoundersAsync(founderName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Wwfd.WordsOfTheFounders.ServiceReferences.WwfdSearchService.Founder>> GetFoundersAsync(string founderName) {
            return base.Channel.GetFoundersAsync(founderName);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IWwfdSearchService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IWwfdSearchService)) {
                return new System.ServiceModel.EndpointAddress("http://api.whatwouldthefoundersdo.org/WwfdSearchService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return WwfdSearchServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IWwfdSearchService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return WwfdSearchServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IWwfdSearchService);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IWwfdSearchService,
        }
    }
}
